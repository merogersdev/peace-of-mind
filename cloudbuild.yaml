# Cloud Build Variables

# $PROJECT_ID

# $_LOCATION
# $_ZONE
# $_REPOSITORY
# $_DATABASE_IMAGE
# $_FRONTEND_IMAGE
# $_BACKEND_IMAGE

# $_HOME
# $_SSH_STRING

steps:
  #   # 1. Build Docker Images

    # Build DB
    - name: "gcr.io/cloud-builders/docker"
      args:
        [
          "build",
          "-t",
          "${_LOCATION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_DATABASE_IMAGE}",
          "./db/",
        ]

    # Build Frontend
    - name: "gcr.io/cloud-builders/docker"
      args:
        [
          "build",
          "-t",
          "${_LOCATION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_FRONTEND_IMAGE}",
          "./frontend/",
        ]

    # Build Backend
    - name: "gcr.io/cloud-builders/docker"
      args:
        [
          "build",
          "-t",
          "${_LOCATION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_BACKEND_IMAGE}",
          "./backend/",
        ]

    # Push DB
    - name: "gcr.io/cloud-builders/docker"
      args:
        [
          "push",
          "${_LOCATION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_DATABASE_IMAGE}",
        ]


    # Push Backend
    - name: "gcr.io/cloud-builders/docker"
      args:
        [
          "push",
          "${_LOCATION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_BACKEND_IMAGE}",
        ]

    # Push Frontend
    - name: "gcr.io/cloud-builders/docker"
      args:
        [
          "push",
          "${_LOCATION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_FRONTEND_IMAGE}",
        ]

  # 3. Deploy via SSH to VM
  - name: "gcr.io/cloud-builders/gcloud"
    args:
      [
        "compute",
        "ssh",
        $_SSH_STRING,
        "--project",
        $PROJECT_ID,
        "--zone",
        $_ZONE,
        "--",
        "docker container stop $$(docker container ls -aq)",
        "docker container rm $$(docker container ls -aq)",
        "docker run -d --restart=unless-stopped -p 5432:5432 -e POSTGRES_USER=${_POSTGRES_USER} -e POSTGRES_PASSWORD=${_POSTGRES_PASSWORD} -e POSTGRES_DB=${_POSTGRES_DB} -e POSTGRES_DB_TEST=${_POSTGRES_DB_TEST} ${_LOCATION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_DATABASE_IMAGE}",
      ]

options:
  logging:
    CLOUD_LOGGING_ONLY

    # [
    #     "compute", "ssh", $_SSH_STRING, "--project", $PROJECT_ID, "--zone", $_LOCATION, "--command='touch file.txt'"
    # ]
